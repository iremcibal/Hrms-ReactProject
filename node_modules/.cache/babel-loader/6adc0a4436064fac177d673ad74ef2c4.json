{"ast":null,"code":"var _jsxFileName = \"C:\\\\hrms-react\\\\hrms-project\\\\src\\\\pages\\\\JobPostList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Checkbox, Table } from 'semantic-ui-react';\nimport JobPostService from '../services/jobPostService.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobPostList() {\n  _s();\n\n  const [jobPosts, setjobPosts] = useState([]);\n  useEffect(() => {\n    let jobPostService = new JobPostService();\n    jobPostService.getjobPosts().then(result => setjobPosts(result.data.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      compact: true,\n      definition: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Position Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"E-mail Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Created Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Dead Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Maximum Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Minimum Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Position Quota\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Position Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: jobPosts.map(jobPost => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            collapsing: true,\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              slider: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: jobPost.company.companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: jobPost.positions.positionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: jobPost.city.cityName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: jobPost.company.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: jobPost.createdAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: jobPost.deadLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: jobPost.maxSalary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: jobPost.minSalary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: jobPost.positionQuota\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: jobPost.positionTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobPostList, \"Sv/hrXUDx4JGCOCAdJLqG+HutCg=\");\n\n_c = JobPostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobPostList\");","map":{"version":3,"sources":["C:/hrms-react/hrms-project/src/pages/JobPostList.jsx"],"names":["React","useEffect","useState","Checkbox","Table","JobPostService","JobPostList","jobPosts","setjobPosts","jobPostService","getjobPosts","then","result","data","map","jobPost","company","companyName","positions","positionName","city","cityName","email","createdAt","deadLine","maxSalary","minSalary","positionQuota","positionTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Checkbox, Table } from 'semantic-ui-react'\r\nimport JobPostService from '../services/jobPostService.jsx';\r\n\r\nexport default function JobPostList() {\r\n    const [jobPosts, setjobPosts] = useState([])\r\n\r\n    useEffect(() => {\r\n        let jobPostService = new JobPostService()\r\n        jobPostService.getjobPosts().then(result => setjobPosts(result.data.data))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Table celled compact definition>\r\n                <Table.Header fullWidth>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell />\r\n                        <Table.HeaderCell>Company</Table.HeaderCell>\r\n                        <Table.HeaderCell>Position Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>City</Table.HeaderCell>\r\n                        <Table.HeaderCell>E-mail Address</Table.HeaderCell>\r\n                        <Table.HeaderCell>Created Date</Table.HeaderCell>\r\n                        <Table.HeaderCell>Dead Line</Table.HeaderCell>\r\n                        <Table.HeaderCell>Maximum Salary</Table.HeaderCell>\r\n                        <Table.HeaderCell>Minimum Salary</Table.HeaderCell>\r\n                        <Table.HeaderCell>Position Quota</Table.HeaderCell>\r\n                        <Table.HeaderCell>Position Title</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {jobPosts.map(jobPost => (\r\n                        <Table.Row>\r\n                            <Table.Cell collapsing>\r\n                                <Checkbox slider />\r\n                            </Table.Cell>\r\n                            <Table.Cell>{jobPost.company.companyName}</Table.Cell>\r\n                            <Table.Cell>{jobPost.positions.positionName}</Table.Cell>\r\n                            <Table.Cell>{jobPost.city.cityName}</Table.Cell>\r\n                            <Table.Cell>{jobPost.company.email}</Table.Cell>\r\n                            <Table.Cell>{jobPost.createdAt}</Table.Cell>\r\n                            <Table.Cell>{jobPost.deadLine}</Table.Cell>\r\n                            <Table.Cell>{jobPost.maxSalary}</Table.Cell>\r\n                            <Table.Cell>{jobPost.minSalary}</Table.Cell>\r\n                            <Table.Cell>{jobPost.positionQuota}</Table.Cell>\r\n                            <Table.Cell>{jobPost.positionTitle}</Table.Cell>\r\n\r\n                        </Table.Row>\r\n\r\n                    ))}\r\n                </Table.Body>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}